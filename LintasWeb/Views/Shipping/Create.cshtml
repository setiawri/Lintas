@model LintasMVC.Models.ShippingServicesModels

@{
    ViewBag.Root = "Shipping Service";
    ViewBag.Title = "Create";
}

<div class="content-wrapper">

    <!-- Page header -->
    <div class="page-header page-header-light">
        <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
            <div class="d-flex">
                <div class="breadcrumb">
                    <a href="@Url.Action("Index", "Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                    <a href="@Url.Action("Index", "Shipping")" class="breadcrumb-item">@ViewBag.Root</a>
                    <span class="breadcrumb-item active">@ViewBag.Title</span>
                </div>
                <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
            </div>
        </div>
    </div>
    <!-- /page header -->
    <!-- Content area -->
    <div class="content">

            <!-- Step Form -->
            <div class="card">
                <div class="card-header bg-white header-elements-inline">
                    @Html.HiddenFor(model => model.Shipping.Id)
                    <h6 class="card-title">No Shipping: <label class="no-shipping">@(Model.Shipping.No == null ? "" : Model.Shipping.No)</label></h6>
                    <div class="header-elements">
                        <div class="list-icons">
                            <a class="list-icons-item" data-action="collapse"></a>
                            <a class="list-icons-item" data-action="reload"></a>
                            <a class="list-icons-item" data-action="remove"></a>
                        </div>
                    </div>
                </div>

                <form class="shipping-form steps-validation" action="#" data-fouc>
                    <!-- Shipping -->
                    <h6>Shipping</h6>
                    <fieldset>
                        <input type="hidden" id="Items_Content" name="Items_Content" />
                        <label class="shipping-validation text-danger" style="display: none"></label>
                        
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    <label class="col-form-label col-lg-3">Stations</label>
                                    <div class="col-lg-9">
                                        <div class="row">
                                            <div class="col-lg-6">
                                                @Html.DropDownListFor(model => model.Shipping.Origin_Stations_Id, ViewBag.listStations as SelectList, "Select Origin", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.Shipping.Origin_Stations_Id, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-6">
                                                @Html.DropDownListFor(model => model.Shipping.Destination_Stations_Id, ViewBag.listStations as SelectList, "Select Destination", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.Shipping.Destination_Stations_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Customers_Id, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.DropDownListFor(model => model.Shipping.Customers_Id, ViewBag.listCustomers as SelectList, "Select Customer", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.Shipping.Customers_Id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-check mb-1">
                                    <label class="form-check-label">
                                        <input type="checkbox" id="chkCustomer" class="check-styled-primary" data-fouc>
                                        Send to Customer's Address
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.No, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.No, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.No, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Company, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.Company, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.Company, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Address, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Address2, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.Address2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.City, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.State, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.State, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.State, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Country, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        <div class="row">
                                            <div class="col-lg-8">
                                                @Html.EditorFor(model => model.Shipping.Country, new { htmlAttributes = new { @class = "form-control", @placeholder = "Country" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.Country, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-4">
                                                @Html.EditorFor(model => model.Shipping.CountryCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Code" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.CountryCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.PostalCode, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.PostalCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    <label class="col-form-label col-lg-3">Mobile / Phone</label>
                                    <div class="col-lg-9">
                                        <div class="row">
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => model.Shipping.Phone1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.Phone1, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => model.Shipping.Phone2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.Phone2, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    <label class="col-form-label col-lg-3">Fax / Email</label>
                                    <div class="col-lg-9">
                                        <div class="row">
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => model.Shipping.Fax, new { htmlAttributes = new { @class = "form-control", @placeholder = "Fax" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.Fax, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-6">
                                                @Html.EditorFor(model => model.Shipping.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                                                @Html.ValidationMessageFor(model => model.Shipping.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.TaxNumber, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.TaxNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.TaxNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Shipping.Notes, htmlAttributes: new { @class = "col-form-label col-lg-3" })
                                    <div class="col-lg-9">
                                        @Html.EditorFor(model => model.Shipping.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Shipping.Notes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        @if (ViewBag.startIndex == 0)
                        {
                            <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#modal_item"><i class="icon-plus2 mr-2"></i> Add New Item</button>
                        }
                        
                        @Html.ValidationMessage("Items", "", new { @class = "text-danger" })
                        <div class="table-responsive">
                            <table class="table table-striped table-hover datatable">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>No</th>
                                        <th>Description</th>
                                        <th>Length (cm)</th>
                                        <th>Width (cm)</th>
                                        <th>Height (cm)</th>
                                        <th>Weight (gr)</th>
                                        <th>Notes</th>
                                        <th class="never">Id</th>
                                    </tr>
                                </thead>
                                <tbody id="data-body">
                                    @{ int row = 0; }
                                    @if (ViewBag.listItems != null)
                                    {
                                        foreach (var item in ViewBag.listItems)
                                        {
                                            <tr>
                                                <td align="center" style="vertical-align:middle"><a href="#" onclick="RemoveItem(@row)" class="text-danger"><i class="icon-cross icon-2x"></i></a></td>
                                                <td>@item.No</td>
                                                <td>@item.Description</td>
                                                <td>@item.Length</td>
                                                <td>@item.Width</td>
                                                <td>@item.Height</td>
                                                <td>@item.Weight</td>
                                                <td>@item.Notes</td>
                                                <td>@item.Id</td>
                                            </tr>
                                            @(row++)
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step" disabled><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Shipping -->
                    <!-- Invoice -->
                    <h6>Invoice</h6>
                    <fieldset>
                        <label class="invoice-validation text-danger" style="display: none"></label>
                        <div class="row div-insert-inv">
                            <a href="@Url.Action("Invoice", "Shipping", new { id = Model.Shipping.Id })" class="btn btn-sm btn-success btn-insert-inv">Add New Invoice</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>No</th>
                                        <th>Total Amount</th>
                                        <th>Total Paid</th>
                                        <th>Notes</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ListInvoice != null)
                                    {
                                        foreach (var item in Model.ListInvoice)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                                <td>@Html.DisplayFor(modelItem => item.No)</td>
                                                <td>@Html.DisplayFor(modelItem => item.TotalAmount)</td>
                                                <td>@Html.DisplayFor(modelItem => item.TotalPaid)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Notes)</td>
                                                <td class="text-center" style="color: black">
                                                    <a href="#" onclick="ViewInvoices('@item.Id', '@item.No')">View</a>
                                                    @*@Html.ActionLink("Delete", "DeleteInvoice", new { id = item.Id })*@
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step"><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Invoice -->
                    <!-- Payment -->
                    <h6>Payment</h6>
                    <fieldset>
                        <label class="payment-validation text-danger" style="display: none"></label>
                        <div>
                            <span style="margin: 5px" class="badge badge-flat border-danger text-danger-600 text-uppercase">Total Remaining: @(string.Format("{0:N2}", Model.ListInvoice.Sum(x => x.TotalAmount) - Model.ListInvoice.Sum(x => x.TotalPaid)))</span>
                            <span style="margin: 5px" class="badge badge-flat border-success text-success-600 text-uppercase">Total Paid: @(string.Format("{0:N2}", Model.ListInvoice.Sum(x => x.TotalPaid)))</span>
                            <span style="margin: 5px" class="badge badge-flat border-primary text-primary-600 text-uppercase">Total Invoice: @(string.Format("{0:N2}", Model.ListInvoice.Sum(x => x.TotalAmount))) ( @Model.ListInvoice.Count Invoice )</span>
                            <a href="@Url.Action("Payment", "Shipping", new { id = Model.Shipping.Id })" class="btn btn-sm btn-success">Add New Payment</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Invoice No.</th>
                                        <th>Amount</th>
                                        <th>Info</th>
                                        <th>Notes</th>
                                        @*<th class="text-center">Action</th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ListPayment)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                            <td>@Html.DisplayFor(modelItem => item.InvoiceNo)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Info)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Notes)</td>
                                            @*<td class="text-center">
                                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                                @Html.ActionLink("Delete", "DeletePayment", new { id = item.Id })
                                            </td>*@
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step"><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Payment -->
                    <!-- Documents -->
                    <h6>Documents</h6>
                    <fieldset>
                        <label class="doc-validation text-danger" style="display: none"></label>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>No Package</th>
                                        <th>Document Uploaded</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ListDocument != null)
                                    {
                                        foreach (var item in Model.ListDocument)
                                        {
                                            <tr>
                                                <td style="vertical-align: top !important">@item.No</td>
                                                <td style="vertical-align: top !important">
                                                    @if (item.ListFileUploads != null)
                                                    {
                                                        foreach (var subitem in item.ListFileUploads)
                                                        {
                                                            <a href="@Url.Action("Download", "Shipping", new { id = subitem.Id })">@subitem.Description</a> @:| <a href="@Url.Action("DeleteDocumentUpload", "Shipping", new { id = subitem.Id })">Delete</a> <br />
                                                        }
                                                    }
                                                </td>
                                                <td class="text-center" style="vertical-align: top !important">
                                                    @Html.ActionLink("Upload", "UploadDocument", new { id = item.Id })
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step"><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Documents -->
                    <!-- Shipments -->
                    <h6>Shipments</h6>
                    <fieldset>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Timestamp</th>
                                        <th>No</th>
                                        <th>Forwarders</th>
                                        <th>Notes</th>
                                        <th>Status</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ListShipment != null)
                                    {
                                        foreach (var item in Model.ListShipment)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                                                <td>@Html.DisplayFor(modelItem => item.No)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Forwarders)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Notes)</td>
                                                <td>
                                                    @if (item.Status_enumid == LintasMVC.Models.ShipmentItemStatusEnum.Pending)
                                                    {
                                                        <span class="badge badge-dark d-block">Pending</span>
                                                    }
                                                    else if (item.Status_enumid == LintasMVC.Models.ShipmentItemStatusEnum.InTransit)
                                                    {
                                                        <span class="badge badge-success d-block">In Transit</span>
                                                    }
                                                    else if (item.Status_enumid == LintasMVC.Models.ShipmentItemStatusEnum.Conflict)
                                                    {
                                                        <span class="badge badge-danger d-block">Conflict</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-primary d-block">Completed</span>
                                                    }
                                                </td>
                                                <td class="text-center">
                                                    @Html.ActionLink("View", "Index", "Shipments", new { no = item.No }, null)
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step"><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Shipments -->
                    <!-- Delivery -->
                    <h6>Pickup/Delivery</h6>
                    <fieldset>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Length (cm)</th>
                                        <th>Width (cm)</th>
                                        <th>Height (cm)</th>
                                        <th>Weight (gr)</th>
                                        <th>Notes</th>
                                        <th>Courier</th>
                                        <th>Status</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ListPackage != null)
                                    {
                                        foreach (var item in Model.ListPackage)
                                        {
                                            <tr>
                                                <td>@item.No</td>
                                                <td>@item.Length</td>
                                                <td>@item.Width</td>
                                                <td>@item.Height</td>
                                                <td>@item.Weight</td>
                                                <td>@item.Notes</td>
                                                <td>@item.CourierInfo</td>
                                                <td>
                                                    @if (item.Delivery_Status == LintasMVC.Models.DeliveryItemStatusEnum.PickupWaiting)
                                                    {
                                                        <span class="badge badge-warning d-block">Waiting for Pickup</span>
                                                    }
                                                    else if (item.Delivery_Status == LintasMVC.Models.DeliveryItemStatusEnum.LocalDelivery)
                                                    {
                                                        <span class="badge badge-success d-block">Local Delivery</span>
                                                    }
                                                    else if (item.Delivery_Status == LintasMVC.Models.DeliveryItemStatusEnum.Conflict)
                                                    {
                                                        <span class="badge badge-danger d-block">Conflict</span>
                                                    }
                                                    else if (item.Delivery_Status == LintasMVC.Models.DeliveryItemStatusEnum.Completed)
                                                    {
                                                        <span class="badge badge-primary d-block">Completed</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-dark d-block">Pending</span>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="#" onclick="ViewLogs('@item.Id')">Log</a> |
                                                    @Html.ActionLink("Update", "DeliveryLog", new { id = item.Id })
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div style="float: right; margin-bottom: 20px">
                            <a href="@Url.Action("Index", "Shipping")" class="btn btn-warning btn-sm">Back to List</a>
                            <button type="button" class="btn btn-primary btn-sm previous-step"><i class="icon-arrow-left13 mr-2"></i> Previous</button>
                            <button type="button" class="btn btn-primary btn-sm next-step">Next <i class="icon-arrow-right14 ml-2"></i></button>
                        </div>
                    </fieldset>
                    <!-- /Delivery -->
                </form>
            </div>
            <!-- /Step Form -->

            <!-- Horizontal form modal -->
            <div id="modal_item" class="modal fade" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">New Package Input</h5>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>

                        <form action="#" class="form-horizontal">
                            <div class="modal-body">
                                <label class="model-validation text-danger" style="display: none"></label>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-3">No</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control mdl-no">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-3">Description</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control mdl-desc">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-3">Dimension (cm)</label>
                                    <div class="col-sm-3">
                                        <input type="number" placeholder="Length" class="form-control mdl-length" min="1">
                                    </div>
                                    <div class="col-sm-3">
                                        <input type="number" placeholder="Width" class="form-control mdl-width" min="1">
                                    </div>
                                    <div class="col-sm-3">
                                        <input type="number" placeholder="Height" class="form-control mdl-height" min="1">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-3">Weight (gr)</label>
                                    <div class="col-sm-9">
                                        <input type="number" class="form-control mdl-weight" min="1">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-3">Notes</label>
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control mdl-notes">
                                    </div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn bg-primary mdl-btn-add">Add Package</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
			<!-- /horizontal form modal -->
        @*}*@
    </div>
    <!-- /content area -->

</div>
<script type="text/javascript">
    var dataTable;

    function RemoveItem(no) {
        //alert(no);
        dataTable.row(no).remove().draw();
        //$('#row_' + no).remove();
        //math_total_price();
    }

    function ClearCustomer() {
        $('#Shipping_Company').val('');
        $('#Shipping_Address').val('');
        $('#Shipping_Address2').val('');
        $('#Shipping_City').val('');
        $('#Shipping_State').val('');
        $('#Shipping_Country').val('');
        $('#Shipping_CountryCode').val('');
        $('#Shipping_PostalCode').val('');
        $('#Shipping_Phone1').val('');
        $('#Shipping_Phone2').val('');
        $('#Shipping_Fax').val('');
        $('#Shipping_Email').val('');
    }

    //Form Invoice
    function ViewInvoices(id, no) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetInvoiceItems", "Conciergeplus")',
            data: {
                id: id
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: no,
                    message: data.content,
                    backdrop: true
                });
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    //Form Delivery
    function ViewLogs(id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetLogs", "Shipping")',
            data: {
                id: id
            },
            success: function (data) {
                var dialog = bootbox.alert({
                    title: 'History Delivery Logs',
                    message: data.content,
                    backdrop: true
                });
            }, //end success
            error: function (result) {
                bootbox.alert("Error " + result);
            } //end error
        }); //end ajax
    }

    $(document).ready(function () {

        var form = $('.steps-validation').show();

        // Basic wizard setup
        form.steps({
            headerTag: 'h6',
            bodyTag: 'fieldset',
            transitionEffect: 'fade',
            enableAllSteps: false,
            enablePagination: false,
            titleTemplate: '<span class="number">#index#</span> #title#',
            autoFocus: true,
            startIndex: @ViewBag.startIndex,
            labels: {
                previous: '<i class="icon-arrow-left13 mr-2" /> Previous',
                next: 'Next <i class="icon-arrow-right14 ml-2" />',
                finish: 'Submit form <i class="icon-arrow-right14 ml-2" />'
            },
            onStepChanging: function (event, currentIndex, newIndex) {

                // Allways allow previous action even if the current form is not valid!
                if (currentIndex > newIndex) {
                    return true;
                }

                // Needed in some cases if the user went back (clean up)
                if (currentIndex < newIndex) {

                    // To remove error styles
                    form.find('.body:eq(' + newIndex + ') label.error').remove();
                    form.find('.body:eq(' + newIndex + ') .error').removeClass('error');
                }

                if (currentIndex === 0) {

                    if ($('#Shipping_Customers_Id').val() == '') {
                        $('.shipping-validation').html('The Customer field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_No').val() == '') {
                        $('.shipping-validation').html('The No field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_Origin_Stations_Id').val() == '') {
                        $('.shipping-validation').html('The Origin Station field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_Destination_Stations_Id').val() == '') {
                        $('.shipping-validation').html('The Destination Station field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_Address').val() == '') {
                        $('.shipping-validation').html('The Address 1 field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_City').val() == '') {
                        $('.shipping-validation').html('The City field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_State').val() == '') {
                        $('.shipping-validation').html('The State field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_Country').val() == '') {
                        $('.shipping-validation').html('The Country field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_CountryCode').val() == '') {
                        $('.shipping-validation').html('The Country Code field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_PostalCode').val() == '') {
                        $('.shipping-validation').html('The Postal Code field is required.').show();
                        return false;
                    }
                    else if ($('#Shipping_Phone1').val() == '') {
                        $('.shipping-validation').html('The Mobile field is required.').show();
                        return false;
                    }
                    else if (datatable.page.info().recordsTotal == 0) {
                        $('.shipping-validation').html('The Shipping Item is required.').show();
                        return false;
                    }
                    else {
                        $('.shipping-validation').html('').hide();

                        var arrItem = [];
                        $('#data-body tr').each(function () {
                            var current_row = $(this).closest('tr');
                            var data = datatable.row(current_row).data();
                            console.log(data);

                            var id = data[8];
                            var no = data[1];
                            var desc = data[2];
                            var length = parseFloat(data[3]);
                            var width = parseFloat(data[4]);
                            var height = parseFloat(data[5]);
                            var weight = parseFloat(data[6]);
                            var notes = data[7];
                            var obj = { id: id, no: no, desc: desc, length: length, width: width, height: height, weight: weight, notes: notes };
                            arrItem.push(obj);
                        });
                        $('#Items_Content').val(JSON.stringify(arrItem));

                        var isSuccess = true;
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SaveShipping", "Shipping")',
                            data: {
                                shipping_id: $('#Shipping_Id').val(),
                                customer_id: $('#Shipping_Customers_Id').val(),
                                company: $('#Shipping_Company').val(),
                                no: $('#Shipping_No').val(),
                                origin_id: $('#Shipping_Origin_Stations_Id').val(),
                                destination_id: $('#Shipping_Destination_Stations_Id').val(),
                                address: $('#Shipping_Address').val(),
                                address2: $('#Shipping_Address2').val(),
                                city: $('#Shipping_City').val(),
                                state: $('#Shipping_State').val(),
                                country: $('#Shipping_Country').val(),
                                country_code: $('#Shipping_CountryCode').val(),
                                postal_code: $('#Shipping_PostalCode').val(),
                                mobile: $('#Shipping_Phone1').val(),
                                phone: $('#Shipping_Phone2').val(),
                                fax: $('#Shipping_Fax').val(),
                                email: $('#Shipping_Email').val(),
                                tax_number: $('#Shipping_TaxNumber').val(),
                                notes: $('#Shipping_Notes').val(),
                                shipping_items: $('#Items_Content').val()
                            },
                            success: function (data) {
                                console.log(data);
                                $('#Shipping_Id').val(data.id);
                                $('.no-shipping').html(data.no_shipping);

                                if (data.status == 'new') {
                                    var x = $('<a href="' + '@Url.Content("~")' + 'Shipping/Invoice/' + data.id + '" class="btn btn-sm btn-success">Add New Invoice</a>');
                                    $('.btn-insert-inv').hide();
                                    $('.div-insert-inv').append(x);
                                }
                            }, //end success
                            error: function (result) {
                                bootbox.alert("Error " + result);
                                isSuccess = false;
                            } //end error
                        }); //end ajax

                        if (isSuccess) { return true; }
                        else{ return false; }
                    }
                }
                else if (currentIndex === 1) {
                    if (@Model.ListInvoice.Count === 0) {
                        $('.invoice-validation').html('The Invoice is required.').show();
                        return false;
                    }
                    else {
                        $('.invoice-validation').html('').hide();
                        return true;
                    }
                }
                else if (currentIndex === 2) {
                    var total_remaining = @Model.ListInvoice.Sum(x => x.TotalAmount) - @Model.ListInvoice.Sum(x => x.TotalPaid);
                    if (total_remaining > 0) {
                        $('.payment-validation').html('The Payment still not completed.').show();
                        return false;
                    }
                    else {
                        $('.payment-validation').html('').hide();
                        return true;
                    }
                }
                else if (currentIndex === 3) {
                    return true;
                }
                else if (currentIndex === 4) {
                    return true;
                }

                //form.validate().settings.ignore = ':disabled,:hidden';
                //return form.valid();
            },
            onStepChanged: function (event, currentIndex, priorIndex) {

            },
            onFinishing: function (event, currentIndex) {
                //form.validate().settings.ignore = ':disabled';
                //return form.valid();

                if (currentIndex === 5) {
                    return true;
                }
            },
            onFinished: function (event, currentIndex) {
                window.location.href = '@Url.Action("Index", "Home")';
            }
        });

        $('.previous-step').click(function () {
            form.steps('previous');
        });

        $('.next-step').click(function () {
            form.steps('next');
        });

        $('.submit-step').click(function () {
            form.steps('finish');
        });

        $('.select2').select2();

        $('.tanggal').pickadate({
            format: 'yyyy/mm/dd',
            selectMonths: true,
            selectYears: true
        });

        $('.check-styled-primary').uniform({
            wrapperClass: 'border-primary-600 text-primary-800'
        });

        $('#Shipping_Customers_Id').change(function () {
            if ($(this).val() != '') {
                $.get('@Url.Action("GetItems", "Shipping")', { customerId: $(this).val() }, function (data) {
                    console.log(data);
                    dataTable = $('.datatable').DataTable();
                    if (data.length > 0) {
                        dataTable.clear();
                        $.each(data, function (index, row) {
                            dataTable.row.add([
                                '<td align="center" style="vertical-align:middle"><a href="#" onclick="RemoveItem(' + index + ')" class="text-danger"><i class="icon-cross icon-2x"></i></a></td>',
                                row.No,
                                row.Description,
                                row.Length,
                                row.Width,
                                row.Height,
                                row.Weight,
                                row.Notes,
                                row.Id
                            ]).draw();
                        }); //end each
                    }
                    else {
                        dataTable.clear().draw(); //empty
                    }
                }); //end ajax get
            }
        });

        if ('@ViewBag.custID' != '') {
            $('#Shipping_Customers_Id').val('@ViewBag.custID').trigger('change');
        }

        $('#chkCustomer').click(function () {
            if ($(this).prop('checked') == false) {
                ClearCustomer();
            }
            else {
                if ($('#Shipping_Customers_Id').val() == '') {
                    ClearCustomer();
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("AutofillingCustomer", "Shipping")',
                        data: {
                            customer_id: $('#Shipping_Customers_Id').val()
                        },
                        success: function (data) {
                            $('#Shipping_Company').val(data.cust_model.Company);
                            $('#Shipping_Address').val(data.cust_model.Address);
                            $('#Shipping_Address2').val(data.cust_model.Address2);
                            $('#Shipping_City').val(data.cust_model.City);
                            $('#Shipping_State').val(data.cust_model.State);
                            $('#Shipping_Country').val(data.country_model.Name);
                            $('#Shipping_CountryCode').val(data.country_model.Code);
                            $('#Shipping_PostalCode').val(data.cust_model.Zipcode);
                            $('#Shipping_Phone1').val(data.cust_model.Phone1);
                            $('#Shipping_Phone2').val(data.cust_model.Phone2);
                            $('#Shipping_Fax').val(data.cust_model.Fax);
                            $('#Shipping_Email').val(data.cust_model.Email);
                        }, //end success
                        error: function (result) {
                            bootbox.alert("Error " + result);
                        } //end error
                    }); //end ajax
                }
            }
        });

        $('.mdl-btn-add').click(function () {
            var no = $('.mdl-no').val();
            var desc = $('.mdl-desc').val();
            var length = $('.mdl-length').val();
            var width = $('.mdl-width').val();
            var height = $('.mdl-height').val();
            var weight = $('.mdl-weight').val();
            var notes = $('.mdl-notes').val();

            if (no == '') {
                $('.model-validation').html('The No field is required.').show();
            }
            else if (desc == '') {
                $('.model-validation').html('The Description field is required.').show();
            }
            else if (length == '' || length == 0) {
                $('.model-validation').html('The Length field is required.').show();
            }
            else if (width == '' || width == 0) {
                $('.model-validation').html('The Width field is required.').show();
            }
            else if (height == '' || height == 0) {
                $('.model-validation').html('The Height field is required.').show();
            }
            else if (weight == '' || weight == 0) {
                $('.model-validation').html('The Weight field is required.').show();
            }
            else {
                $('.model-validation').html('').hide();
                var row_count = datatable.page.info().recordsTotal; //alert(row_count);

                dataTable.row.add([
                    '<td align="center" style="vertical-align:middle"><a href="#" onclick="RemoveItem(' + row_count + ')" class="text-danger"><i class="icon-cross icon-2x"></i></a></td>',
                    no,
                    desc,
                    parseFloat(length),
                    parseFloat(width),
                    parseFloat(height),
                    parseFloat(weight),
                    notes,
                    ''
                ]).draw();

                $('#modal_item').modal('toggle');
                $('.modal-body input').val('');
            }
        });

        // Setting datatable defaults
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            columnDefs: [{
                orderable: false,
                width: 100,
                targets: [0]
            }],
            dom: '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
            language: {
                search: '<span>Filter:</span> _INPUT_',
                searchPlaceholder: 'Type to filter...',
                lengthMenu: '<span>Show:</span> _MENU_',
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' }
            }
        });

        var datatable = $('.datatable').DataTable({
            columnDefs: [
                {
                    visible: false, targets: [8]
                }
            ],
            //select: {
            //    style: 'multi',
            //    selector: 'td:first-child'
            //},
            pagingType: 'full_numbers',
            order: [[1, 'asc']]
        });

        $('#target').submit(function (e) {
            //e.preventDefault();
            var arrItem = [];
            $('#data-body tr').each(function () {
                var current_row = $(this).closest('tr');
                var data = datatable.row(current_row).data();
                //console.log(data);

                var id = data[7];
                var no = data[1];
                var length = parseFloat(data[2]);
                var width = parseFloat(data[3]);
                var height = parseFloat(data[4]);
                var weight = parseFloat(data[5]);
                var notes = data[6];
                var obj = { id: id, no: no, length: length, width: width, height: height, weight: weight, notes: notes };
                arrItem.push(obj);
            });
            $('#Items_Content').val(JSON.stringify(arrItem));
        });

    });
</script>